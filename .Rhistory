ggtitle("Carburetors")
grid.arrange(plot_cyl, plot_vs, plot_am, plot_gear, plot_carb, ncol = 3)
pairs(mtcars_numerical,
main="MT Cars Scatterplot Matrix")
cor_matrix <- cor(mtcars_numerical, use = "complete.obs")
cor_matrix
corrplot(cor_matrix,
method = "color",
type = "upper",
col = colorRampPalette(c("white", "grey", "#4494a4"))(200),
tl.col = "black",
tl.srt = 45)
set.seed(25)
hopkins_mtcars <- hopkins(mtcars, m = ceiling(nrow(mtcars) / 10))
hopkins_mtcars
fviz_dist(
dist(mtcars, method = "manhattan"),
show_labels = FALSE,
gradient = list(low = "#f9d448", mid = "white", high = "#4494a4")
) + labs(title = "mtcar")
mtcars_silhouette_hierarchical <- fviz_nbclust(mtcars, hcut, method = "silhouette")
mtcars_silhouette_hierarchical
mtcars_gap_hierarchical <- fviz_nbclust(mtcars, hcut, nstart = 50, method = "gap_stat", nboot = 500)
mtcars_gap_hierarchical
get_cluster_diff <- function(gap_stat, max_k = 10) {
gap_df <- as.data.frame(gap_stat$Tab)
gap_diff_list <- vector()
gap_val_list <- gap_df$gap
s_val_list <- gap_df$SE.sim
for (k in 1:max_k) {
if (k < max_k - 1) {
val <- gap_val_list[k] -
(gap_val_list[k + 1] -
s_val_list[k + 1])
gap_diff_list <- append(gap_diff_list, val)
}
}
return(gap_diff_list)
}
max_k <- 10
gap_stat <- clusGap(mtcars, hcut, K.max = max_k, B = 500)
gap_diff_list <- get_cluster_diff(gap_stat, 10)
pos_neg_df <- data.frame(cluster = factor(seq_along(gap_diff_list)), gap_diff = gap_diff_list)
ggplot(data = pos_neg_df, aes(x = cluster, y = gap_diff)) +
geom_bar(stat = "identity", fill = "#4494a4") +
xlab("Number of clusters K") +
ylab("Gap(k) - (Gap(k+1) - Sk+1)") +
ggtitle("Gap Statistic for Hierarchical Clustering") +
theme_classic()
res.dist <- dist(mtcars, method = "manhattan")
hc_single <- hclust(d = res.dist, method = "single")
grp_single <- cutree(hc_single, k = 2)
single_cluster <- fviz_cluster(
list(data = mtcars, cluster = grp_single),
palette = "jco",
geom = "point",
ellipse.type = "convex",
show.clust.cent = FALSE,
main = "Single Linkage Cluster",
ggtheme = theme_minimal()
)
single_dendrogram <- fviz_dend(
hc_single,
cex = 0.5, # Increase the label size
k = 2, # Number of clusters
k_colors = "jco", # Color palette for clusters
rect = TRUE,
rect_border = "jco", # Add rectangle around clusters
rect_fill = TRUE, # Fill the rectangle
label_cols = "black", # Color of labels
label_cex = 0.5, # Font size of labels
main = "Single Linkage Dendrogram",
ggtheme = theme_minimal()
)
single_dendrogram
hc_complete <- hclust(d = res.dist, method = "complete")
grp_complete <- cutree(hc_complete, k = 2)
complete_cluster <- fviz_cluster(
list(data = mtcars, cluster = grp_complete),
palette = "jco",
geom = "point",
ellipse.type = "convex",
show.clust.cent = FALSE,
main = "Complete Linkage Cluster",
ggtheme = theme_minimal()
)
complete_dendrogram <- fviz_dend(
hc_complete,
cex = 0.5,
k = 2,
k_colors = "jco",
rect = TRUE,
rect_border = "jco",
rect_fill = TRUE,
label_cols = "black",
label_cex = 0.5,
main = "Complete Linkage Dendrogram",
ggtheme = theme_minimal()
)
complete_dendrogram
hc_average <- hclust(d = res.dist, method = "average")
grp_average <- cutree(hc_average, k = 2)
average_cluster <- fviz_cluster(
list(data = mtcars, cluster = grp_average),
palette = "jco",
geom = "point",
ellipse.type = "convex",
show.clust.cent = FALSE,
main = "Average Linkage Cluster",
ggtheme = theme_minimal()
)
average_dendrogram <- fviz_dend(
hc_average,
cex = 0.5,
k = 2,
k_colors = "jco",
rect = TRUE,
rect_border = "jco",
rect_fill = TRUE,
label_cols = "black",
label_cex = 0.5,
main = "Average Linkage Dendrogram",
ggtheme = theme_minimal()
)
average_dendrogram
hc_ward_d <- hclust(d = res.dist, method = "ward.D")
grp_ward_d <- cutree(hc_ward_d, k = 2)
ward_d_cluster <- fviz_cluster(
list(data = mtcars, cluster = grp_ward_d),
palette = "jco",
geom = "point",
ellipse.type = "convex",
show.clust.cent = FALSE,
main = "Ward D Linkage Cluster",
ggtheme = theme_minimal()
)
ward_d_dendrogram <- fviz_dend(
hc_ward_d,
cex = 0.5,
k = 2,
k_colors = "jco",
rect = TRUE,
rect_border = "jco",
rect_fill = TRUE,
label_cols = "black",
label_cex = 0.5,
main = "Ward D Linkage Dendrogram",
ggtheme = theme_minimal()
)
ward_d_dendrogram
hc_ward_d2 <- hclust(d = res.dist, method = "ward.D2")
grp_ward_d2 <- cutree(hc_ward_d2, k = 2)
ward_d2_cluster <- fviz_cluster(
list(data = mtcars, cluster = grp_ward_d2),
palette = "jco",
geom = "point",
ellipse.type = "convex",
show.clust.cent = FALSE,
main = "Ward D2 Linkage Cluster",
ggtheme = theme_minimal()
)
ward_d2_dendrogram <- fviz_dend(
hc_ward_d2,
cex = 0.5,
k = 2,
k_colors = "jco",
rect = TRUE,
rect_border = "jco",
rect_fill = TRUE,
label_cols = "black",
label_cex = 0.5,
main = "Ward D2 Linkage Dendrogram",
ggtheme = theme_minimal()
)
ward_d2_dendrogram
single_dendrogram +
complete_dendrogram +
average_dendrogram +
ward_d_dendrogram +
ward_d2_dendrogram +
plot_layout(ncol = 2)
single_cluster +
complete_cluster +
average_cluster +
ward_d_cluster +
ward_d2_cluster +
plot_layout(ncol = 2)
cor(res.dist, cophenetic(hc_single))
cor(res.dist, cophenetic(hc_complete))
cor(res.dist, cophenetic(hc_average))
cor(res.dist, cophenetic(hc_ward_d))
cor(res.dist, cophenetic(hc_ward_d2))
dend_complete <- mtcars %>%
dist %>%
hclust("complete") %>%
as.dendrogram
dend_single <- mtcars %>%
dist %>%
hclust("single") %>%
as.dendrogram
dend_average <- mtcars %>%
dist %>%
hclust("average") %>%
as.dendrogram
dend_ward <- mtcars %>%
dist %>%
hclust("ward.D") %>%
as.dendrogram
dend_ward2 <- mtcars %>%
dist %>%
hclust("ward.D2") %>%
as.dendrogram
dend_list <- dendlist(
"Complete" = dend_complete,
"Single" = dend_single,
"Average" = dend_average,
"WardD" = dend_ward,
"WardD2" = dend_ward2
)
cors_cophenetic <- cor.dendlist(dend_list, method = "cophenetic")
round(cors_cophenetic, 2)
cors_baker <- cor.dendlist(dend_list, method = "baker")
round(cors_baker, 2)
corrplot(cors_cophenetic, method = "pie", type = "lower", col = color_palette, tl.col = "black")
linkage_methods <- c("Single", "Complete", "Average", "Ward.D", "Ward.D2")
cophenetic_correlations <- c(
cor(res.dist, cophenetic(hc_single)),
cor(res.dist, cophenetic(hc_complete)),
cor(res.dist, cophenetic(hc_average)),
cor(res.dist, cophenetic(hc_ward_d)),
cor(res.dist, cophenetic(hc_ward_d2))
)
cophenetic_df <- data.frame(
linkage_method = linkage_methods,
cophenetic_correlation = cophenetic_correlations
)
cophenetic_df
ggplot(cophenetic_df, aes(x = linkage_method, y = cophenetic_correlation)) +
geom_bar(stat = "identity", fill = "#4494a4") +
theme_classic() +
labs(
title = "Cophenetic Correlation Coefficients for Different Linkage Methods",
x = "Linkage Method",
y = "Cophenetic Correlation Coefficient"
) +
geom_text(aes(label = round(cophenetic_correlation, 3)), vjust = -0.5)
average_dendrogram <- as.dendrogram(hc_average)
complete_dendrogram <- as.dendrogram(hc_complete)
tanglegram(
average_dendrogram,
complete_dendrogram,
color_lines = color_palette,
highlight_distinct_edges = FALSE, # Turn-off dashed lines
common_subtrees_color_lines = FALSE, # Turn-off line colors
common_subtrees_color_branches = TRUE, # Color common branches
main = paste("Tanglegram: Average vs. Complete Linkage, Entanglement =", round(entanglement(dendlist(average_dendrogram, complete_dendrogram)), 2))
)
res.diana <- diana(
x = mtcars,
metric = "manhattan"
)
divisive_dendrogram <- fviz_dend(
res.diana,
cex = 0.5,
k = 2,
k_colors = "jco",
rect = TRUE,
rect_border = "jco",
rect_fill = TRUE,
label_cols = "black",
label_cex = 0.5,
main = "Divisive Clustering Dendrogram",
ggtheme = theme_minimal()
)
divisive_dendrogram
intern_mtcars <- clValid(mtcars, 2:6, clMethods = "hierarchical", validation = "internal", method = "average", metric = "manhattan")
par(mfrow = c(2, 2), mar = c(4, 4, 3, 1))
plot(intern_mtcars, legend = FALSE)
plot(nClusters(intern_mtcars), measures(intern_mtcars, "Dunn")[, , 1], type = "n", axes = FALSE, xlab = "", ylab = "")
legend("center", clusterMethods(intern_mtcars), col = 1:9, lty = 1:9, pch = paste(1:9))
intern_complete <- clValid(mtcars, 2:6, clMethods = "hierarchical", validation = "internal", method = "complete", metric = "manhattan")
intern_average <- clValid(mtcars, 2:6, clMethods = "hierarchical", validation = "internal", method = "average", metric = "manhattan")
intern_single <- clValid(mtcars, 2:6, clMethods = "hierarchical", validation = "internal", method = "single", metric = "manhattan")
intern_ward <- clValid(mtcars, 2:6, clMethods = "hierarchical", validation = "internal", method = "ward", metric = "manhattan")
num_clusters <- nClusters(intern_complete)
dunn_complete <- measures(intern_complete, "Dunn")[, , 1]
dunn_average <- measures(intern_average, "Dunn")[, , 1]
dunn_single <- measures(intern_single, "Dunn")[, , 1]
dunn_ward <- measures(intern_ward, "Dunn")[, , 1]
connectivity_complete <- measures(intern_complete, "Connectivity")[, , 1]
connectivity_average <- measures(intern_average, "Connectivity")[, , 1]
connectivity_single <- measures(intern_single, "Connectivity")[, , 1]
connectivity_ward <- measures(intern_ward, "Connectivity")[, , 1]
silhouette_complete <- measures(intern_complete, "Silhouette")[, , 1]
silhouette_average <- measures(intern_average, "Silhouette")[, , 1]
silhouette_single <- measures(intern_single, "Silhouette")[, , 1]
silhouette_ward <- measures(intern_ward, "Silhouette")[, , 1]
plot(num_clusters, dunn_complete, type = "o", col = "#4494a4", ylim = range(dunn_complete, dunn_average, dunn_single, dunn_ward),
xlab = "Number of Clusters", ylab = "Dunn Index", main = "Dunn Index")
lines(num_clusters, dunn_average, type = "o", col = "#7ca454")
lines(num_clusters, dunn_single, type = "o", col = "#f9d448")
lines(num_clusters, dunn_ward, type = "o", col = "#9fc4b7")
legend("bottomright", legend = c("Complete", "Average", "Single", "Ward"), col = c("#4494a4", "#7ca454", "#f9d448", "#9fc4b7"), lty = 1, pch = 1, cex = 0.8)
# Plot Connectivity
plot(num_clusters, connectivity_complete, type = "o", col = "#4494a4", ylim = range(connectivity_complete, connectivity_average, connectivity_single, connectivity_ward),
xlab = "Number of Clusters", ylab = "Connectivity", main = "Connectivity")
lines(num_clusters, connectivity_average, type = "o", col = "#7ca454")
lines(num_clusters, connectivity_single, type = "o", col = "#f9d448")
lines(num_clusters, connectivity_ward, type = "o", col = "#9fc4b7")
legend("bottomright", legend = c("Complete", "Average", "Single", "Ward"), col = c("#4494a4", "#7ca454", "#f9d448", "#9fc4b7"), lty = 1, pch = 1, cex = 0.8)
# Plot Silhouette
plot(num_clusters, silhouette_complete, type = "o", col = "#4494a4", ylim = range(silhouette_complete, silhouette_average, silhouette_single, silhouette_ward),
xlab = "Number of Clusters", ylab = "Silhouette Width", main = "Silhouette Width")
lines(num_clusters, silhouette_average, type = "o", col = "#7ca454")
lines(num_clusters, silhouette_single, type = "o", col = "#f9d448")
lines(num_clusters, silhouette_ward, type = "o", col = "#9fc4b7")
legend("bottomright", legend = c("Complete", "Average", "Single", "Ward"), col = c("#4494a4", "#7ca454", "#f9d448", "#9fc4b7"), lty1, pch = 1, cex = 0.8)
print("Summary of Complete Linkage Method:", summary(intern_complete))
print("Summary of Average Linkage Method:", summary(intern_average))
print("Summary of Single Linkage Method:", summary(intern_single))
print("Summary of Ward Linkage Method:", summary(intern_ward))
stab_mtcars <- clValid(mtcars, 2:6, clMethods = "hierarchical", validation = "stability")
optimal_scores_stab_mtcars <- optimalScores(stab_mtcars)
optimal_scores_stab_mtcars
stab_complete <- clValid(mtcars, 2:6, clMethods = "hierarchical", validation = "stability", method = "complete", metric = "manhattan")
stab_average <- clValid(mtcars, 2:6, clMethods = "hierarchical", validation = "stability", method = "average", metric = "manhattan")
stab_single <- clValid(mtcars, 2:6, clMethods = "hierarchical", validation = "stability", method = "single", metric = "manhattan")
stab_ward <- clValid(mtcars, 2:6, clMethods = "hierarchical", validation = "stability", method = "ward", metric = "manhattan")
apn_complete <- measures(stab_complete, "APN")[, , 1]
apn_average <- measures(stab_average, "APN")[, , 1]
apn_single <- measures(stab_single, "APN")[, , 1]
apn_ward <- measures(stab_ward, "APN")[, , 1]
ad_complete <- measures(stab_complete, "AD")[, , 1]
ad_average <- measures(stab_average, "AD")[, , 1]
ad_single <- measures(stab_single, "AD")[, , 1]
ad_ward <- measures(stab_ward, "AD")[, , 1]
adm_complete <- measures(stab_complete, "ADM")[, , 1]
adm_average <- measures(stab_average, "ADM")[, , 1]
adm_single <- measures(stab_single, "ADM")[, , 1]
adm_ward <- measures(stab_ward, "ADM")[, , 1]
fom_complete <- measures(stab_complete, "FOM")[, , 1]
fom_average <- measures(stab_average, "FOM")[, , 1]
fom_single <- measures(stab_single, "FOM")[, , 1]
fom_ward <- measures(stab_ward, "FOM")[, , 1]
# Plot APN
plot(num_clusters, apn_complete, type = "o", col = "#4494a4", ylim = range(apn_complete, apn_average, apn_single, apn_ward),
xlab = "Number of Clusters", ylab = "APN", main = "Average Proportion of Non-Overlap (APN)")
lines(num_clusters, apn_average, type = "o", col = "#7ca454")
lines(num_clusters, apn_single, type = "o", col = "#f9d448")
lines(num_clusters, apn_ward, type = "o", col = "#9fc4b7")
legend("topright", legend = c("Complete", "Average", "Single", "Ward"), col = c("#4494a4", "#7ca454", "#f9d448", "#9fc4b7"), lty = 1, pch = 1)
# Plot AD
plot(num_clusters, ad_complete, type = "o", col = "#4494a4", ylim = range(ad_complete, ad_average, ad_single, ad_ward),
xlab = "Number of Clusters", ylab = "AD", main = "Average Distance (AD)")
lines(num_clusters, ad_average, type = "o", col = "#7ca454")
lines(num_clusters, ad_single, type = "o", col = "#f9d448")
lines(num_clusters, ad_ward, type = "o", col = "#9fc4b7")
legend("topright", legend = c("Complete", "Average", "Single", "Ward"), col = c("#4494a4", "#7ca454", "#f9d448", "#9fc4b7"), lty = 1, pch = 1)
# Plot ADM
plot(num_clusters, adm_complete, type = "o", col = "#4494a4", ylim = range(adm_complete, adm_average, adm_single, adm_ward),
xlab = "Number of Clusters", ylab = "ADM", main = "Average Distance between Means (ADM)")
lines(num_clusters, adm_average, type = "o", col = "#7ca454")
lines(num_clusters, adm_single, type = "o", col = "#f9d448")
lines(num_clusters, adm_ward, type = "o", col = "#9fc4b7")
legend("topright", legend = c("Complete", "Average", "Single", "Ward"), col = c("#4494a4", "#7ca454", "#f9d448", "#9fc4b7"), lty = 1, pch = 1)
# Plot FOM
plot(num_clusters, fom_complete, type = "o", col = "#4494a4", ylim = range(fom_complete, fom_average, fom_single, fom_ward),
xlab = "Number of Clusters", ylab = "FOM", main = "Figure of Merit (FOM)")
lines(num_clusters, fom_average, type = "o", col = "#7ca454")
lines(num_clusters, fom_single, type = "o", col = "#f9d448")
lines(num_clusters, fom_ward, type = "o", col = "#9fc4b7")
legend("topright", legend = c("Complete", "Average", "Single", "Ward"), col = c("#4494a4", "#7ca454", "#f9d448", "#9fc4b7"), lty = 1, pch = 1)
grp <- cutree(hc_average, k = 2)
head(grp, n = 32)
#Number of members in each cluster
table(grp)
fviz_cluster(list(data = mtcars, cluster = grp),
palette = c("#2E9FDF", "#E7B800"),
ellipse.type = "convex", #Concentration ellipse
repel = TRUE, #Avoid label overplotting (slow)
show.clust.cent = FALSE, ggtheme = theme_minimal()
)
mtcars_num_results <- cbind(
mtcars_numerical,
hclust_average = grp
)
mtcars_num_results
par(mfrow = c(2, 3))
mtcars_results_col <- colnames(mtcars_num_results)[-length(colnames(mtcars_num_results))]
for (i in seq_along(mtcars_results_col)) {
column_name <- mtcars_results_col[i]
boxplot(
mtcars_num_results[[column_name]] ~ mtcars_num_results$hclust_average,
xlab = "H Cluster",
ylab = column_name,
main = paste(column_name),
col = color_palette[i %% length(color_palette) + 1]
)
}
par(mfrow = c(1, 1))
mtcars_cat_results <- cbind(
mtcars_categorical,
hclust_average = grp
)
mtcars_cat_results
mtcars_cat_results$hclust_average <- as.factor(mtcars_cat_results$hclust_average)
color_palette <- c("#4494a4", "#7ca454", "#f9d448", "#9fc4b7", "#fcea9e", "#a6ccd4")
variables_to_plot <- colnames(mtcars_cat_results)[colnames(mtcars_cat_results) != "hclust_average"]
plot_cyl <- ggplot(mtcars_cat_results, aes(x = factor(cyl), fill = factor(hclust_average))) +
geom_bar(position = "dodge") +
scale_fill_manual(values = sample(color_palette, length(unique(mtcars_cat_results$hclust_average)))) +
theme_classic() +
ggtitle("Cylinders")
plot_vs <- ggplot(mtcars_cat_results, aes(x = factor(vs), fill = factor(hclust_average))) +
geom_bar(position = "dodge") +
scale_fill_manual(values = sample(color_palette, length(unique(mtcars_cat_results$hclust_average)))) +
theme_classic() +
ggtitle("Engine Shape (vs)")
plot_am <- ggplot(mtcars_cat_results, aes(x = factor(am), fill = factor(hclust_average))) +
geom_bar(position = "dodge") +
scale_fill_manual(values = sample(color_palette, length(unique(mtcars_cat_results$hclust_average)))) +
theme_classic() +
ggtitle("Transmission (am)")
plot_gear <- ggplot(mtcars_cat_results, aes(x = factor(gear), fill = factor(hclust_average))) +
geom_bar(position = "dodge") +
scale_fill_manual(values = sample(color_palette, length(unique(mtcars_cat_results$hclust_average)))) +
theme_classic() +
ggtitle("Gears")
plot_carb <- ggplot(mtcars_cat_results, aes(x = factor(carb), fill = factor(hclust_average))) +
geom_bar(position = "dodge") +
scale_fill_manual(values = sample(color_palette, length(unique(mtcars_cat_results$hclust_average)))) +
theme_classic() +
ggtitle("Carburetors")
# Arrange the plots in a grid
grid.arrange(plot_cyl, plot_vs, plot_am, plot_gear, plot_carb, ncol = 2)
corrplot(cor_matrix,
method = "color",
type = "upper",
col = colorRampPalette(c("white", "grey", "#4494a4"))(200),
tl.col = "black",
tl.srt = 45)
library("ggplot2")
library("factoextra")
library("dendextend")
library("hopkins")
library("corrplot")
library("cluster")
library("patchwork")
library("clValid")
library("EMCluster")
library("fastICA")
library("Rtsne")
library("umap")
library("mclust")
library("fpc")
wdbc <- read.csv("./data/wdbc.csv", header = T, sep = ",")
head(wdbc)
color_palette <- rainbow(10) #color palette
diagnosis <- wdbc$diagnosis
encoded_diagnosis <- ifelse(diagnosis == "M", 1, 2) #making diagnoses numerical
wdbc_numerical <- wdbc[, -c(1, 2)] #remove id and diagnosis
wdbc_scaled <- data.frame(scale(wdbc_numerical)) #scale data
rownames(wdbc_scaled) <- wdbc$ID
wdbc <- wdbc_scaled
head(wdbc)
dim(wdbc)
get_kmeans_plot <- function(km.res, data, name) {
p <- fviz_cluster(
km.res,
data = data,
palette = color_palette,
ellipse.type = "convex",
star.plot = TRUE,
ellipse = TRUE,
geom = "point",
main = paste0(name, " K-Means Cluster Plot"),
ggtheme = theme_minimal()
)
return(p)
}
set.seed(101)
km.res <- kmeans(wdbc, 2, nstart = 100)
get_kmeans_plot(km.res, wdbc, "Base")
RRand(encoded_diagnosis, km.res$cluster)
set.seed(101)
pca_wdbc <- prcomp(wdbc)
pca_index <- which(cumsum(summary(pca_wdbc)$importance[2,]) >= 0.8)[1] # taking principal components which explain 80% of the variation in the data
pca_data <- data.frame(pca_wdbc$x)
pca_data_no <- pca_data[, 1:pca_index]
pca_km.res <- kmeans(pca_data_no, 2, nstart = 100)
get_kmeans_plot(pca_km.res, pca_data_no, "PCA")
RRand(encoded_diagnosis, pca_km.res$cluster)
set.seed(101)
n_components <- 2
ica_result <- fastICA(wdbc, n.comp = n_components)
ica_data <- data.frame(ica_result$S)
colnames(ica_data) <- paste0("IC", 1:n_components)
ica_km.res <- kmeans(ica_data, 2, nstart = 100)
get_kmeans_plot(ica_km.res, ica_data, "ICA")
RRand(encoded_diagnosis, ica_km.res$cluster)
set.seed(101)
tsne_result <- Rtsne(wdbc, dims = 3, perplexity = 30) # dimension reduction to only 3
tsne_data <- as.data.frame(tsne_result$Y)
tsne_km.res <- kmeans(tsne_data, 2, nstart = 100)
get_kmeans_plot(tsne_km.res, tsne_data, "t-SNE")
RRand(encoded_diagnosis, tsne_km.res$cluster)
set.seed(101)
umap_result <- umap(wdbc)
umap_data <- as.data.frame(umap_result$layout)
umap_km.res <- kmeans(umap_data, 2, nstart = 100)
get_kmeans_plot(umap_km.res, umap_data, "UMAP")
RRand(encoded_diagnosis, umap_km.res$cluster)
